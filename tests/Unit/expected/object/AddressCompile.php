<?php

declare(strict_types=1);

namespace Tests\Generated;

use PHPStan\PhpDocParser\Ast\Type\IdentifierTypeNode;
use PHPStan\PhpDocParser\Ast\Type\TypeNode;
use Shredio\TypeSchema\Context\TypeContext;
use Shredio\TypeSchema\Error\ErrorElement;
use Shredio\TypeSchema\TypeSchema;
use Shredio\TypeSchema\Types\Type;
use Tests\Unit\Address;

/**
 * This class was generated by the compiler. Do not modify it manually.
 *
 * @extends Type<Address>
 */
final readonly class AddressMapper_79b8c3eb3e extends Type
{
	public function parse(mixed $valueToParse, TypeContext $context): ErrorElement|Address
	{
		// 0. Initialize TypeSchema
		$ts = TypeSchema::get();

		// 1. Define schema
		$schema = $ts->arrayShape([
			'street' => $ts->string(),
			'city' => $ts->string(),
		]);

		// 2. Map values
		$values = $schema->parse($valueToParse, $context);
		if ($this->isError($values)) {
			return $values;
		}

		// 3. Create a new instance
		$obj = new Address();

		// 4. Set properties
		$obj->street = $values['street'];
		$obj->city = $values['city'];

		return $obj;
	}


	protected function getTypeNode(TypeContext $context): TypeNode
	{
		return new IdentifierTypeNode(Address::class);
	}
}
